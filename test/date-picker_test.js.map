{"version":3,"file":"date-picker_test.js","sourceRoot":"","sources":["../src/test/date-picker_test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAC;AAExC,KAAK,CAAC,cAAc,EAAE,GAAG,EAAE;IACzB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,qEAAqE,CAAC,CAAC;QACpG,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF,mBAAmB,CACpB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEL,kDAAkD;IAClD,+EAA+E;IAC/E,8BAA8B;IAC9B,YAAY;IACZ,UAAU;IACV,8BAA8B;IAC9B,sDAAsD;IACtD,sBAAsB;IACtB,QAAQ;IACR,SAAS;IACT,QAAQ;IAER,0CAA0C;IAC1C,kFAAkF;IAClF,8DAA8D;IAC9D,sBAAsB;IACtB,+BAA+B;IAC/B,8BAA8B;IAC9B,YAAY;IACZ,UAAU;IACV,+BAA+B;IAC/B,sDAAsD;IACtD,sBAAsB;IACtB,QAAQ;IACR,SAAS;IACT,QAAQ;IAER,0CAA0C;IAC1C,kFAAkF;IAClF,+BAA+B;IAC/B,6DAA6D;IAC7D,QAAQ;AACR,CAAC,CAAC,CAAC","sourcesContent":["import {DatePicker} from '../date-picker.js';\n\nimport {fixture, assert} from '@open-wc/testing';\nimport {html} from 'lit/static-html.js';\n\nsuite('date-element', () => {\n  test('is defined', () => {\n    const el = document.createElement('date-picker');\n    assert.instanceOf(el, DatePicker);\n  });\n\n  test('renders with default values', async () => {\n    const el = await fixture(html`<date-picker selectedDate=\"2022-12-16T15:16:44.778Z\"></date-picker>`);\n    assert.shadowDom.equal(\n      el,\n      `<p>16/12/2022</p>`\n    );\n  });\n\n//   test('renders with a set name', async () => {\n//     const el = await fixture(html`<date-picker name=\"Test\"></date-picker>`);\n//     assert.shadowDom.equal(\n//       el,\n//       `\n//       <h1>Hello, Test!</h1>\n//       <button part=\"button\">Click Count: 0</button>\n//       <slot></slot>\n//     `\n//     );\n//   });\n\n//   test('handles a click', async () => {\n//     const el = (await fixture(html`<date-picker></date-picker>`)) as MyElement;\n//     const button = el.shadowRoot!.querySelector('button')!;\n//     button.click();\n//     await el.updateComplete;\n//     assert.shadowDom.equal(\n//       el,\n//       `\n//       <h1>Hello, World!</h1>\n//       <button part=\"button\">Click Count: 1</button>\n//       <slot></slot>\n//     `\n//     );\n//   });\n\n//   test('styling applied', async () => {\n//     const el = (await fixture(html`<date-picker></date-picker>`)) as MyElement;\n//     await el.updateComplete;\n//     assert.equal(getComputedStyle(el).paddingTop, '16px');\n//   });\n});\n"]}